{"ast":null,"code":"var _jsxFileName = \"/Users/clementr/Desktop/portfolio/portfolio_pro/src/components/NetworkAnimation.js\",\n  _s = $RefreshSig$();\n// src/NetworkAnimation.js\nimport React, { useRef, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Particles = () => {\n  _s();\n  const meshRef = useRef();\n  const particlesRef = useRef();\n\n  // Initialiser les particules\n  useEffect(() => {\n    const particleCount = 500;\n    const positions = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 10;\n    }\n    particlesRef.current.geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n  }, []);\n\n  // Animer les particules\n  useFrame(() => {\n    meshRef.current.rotation.x += 0.001;\n    meshRef.current.rotation.y += 0.001;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      ref: particlesRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      color: \"#00ff00\",\n      size: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Particles, \"6fsH1CwjOaTNjV7KVa7jtTTb/7E=\", false, function () {\n  return [useFrame];\n});\n_c = Particles;\nconst NetworkAnimation = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 10],\n      fov: 75\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c2 = NetworkAnimation;\nexport default NetworkAnimation;\nvar _c, _c2;\n$RefreshReg$(_c, \"Particles\");\n$RefreshReg$(_c2, \"NetworkAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","Canvas","useFrame","OrbitControls","THREE","jsxDEV","_jsxDEV","Particles","_s","meshRef","particlesRef","particleCount","positions","Float32Array","i","Math","random","current","geometry","setAttribute","BufferAttribute","rotation","x","y","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","color","size","_c","NetworkAnimation","camera","position","fov","intensity","_c2","$RefreshReg$"],"sources":["/Users/clementr/Desktop/portfolio/portfolio_pro/src/components/NetworkAnimation.js"],"sourcesContent":["// src/NetworkAnimation.js\nimport React, { useRef, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\n\nconst Particles = () => {\n  const meshRef = useRef();\n  const particlesRef = useRef();\n  \n  // Initialiser les particules\n  useEffect(() => {\n    const particleCount = 500;\n    const positions = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 10;\n    }\n    particlesRef.current.geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n  }, []);\n\n  // Animer les particules\n  useFrame(() => {\n    meshRef.current.rotation.x += 0.001;\n    meshRef.current.rotation.y += 0.001;\n  });\n\n  return (\n    <points ref={meshRef}>\n      <bufferGeometry ref={particlesRef} />\n      <pointsMaterial color=\"#00ff00\" size={0.1} />\n    </points>\n  );\n};\n\nconst NetworkAnimation = () => {\n  return (\n    <Canvas camera={{ position: [0, 0, 10], fov: 75 }}>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <Particles />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n\nexport default NetworkAnimation;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AACrD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGV,MAAM,CAAC,CAAC;EACxB,MAAMW,YAAY,GAAGX,MAAM,CAAC,CAAC;;EAE7B;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,GAAG;IACzB,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACF,aAAa,GAAG,CAAC,CAAC;IACrD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,EAAEG,CAAC,EAAE,EAAE;MACtCF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE;MAC7CJ,SAAS,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE;MACjDJ,SAAS,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE;IACnD;IACAN,YAAY,CAACO,OAAO,CAACC,QAAQ,CAACC,YAAY,CAAC,UAAU,EAAE,IAAIf,KAAK,CAACgB,eAAe,CAACR,SAAS,EAAE,CAAC,CAAC,CAAC;EACjG,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAV,QAAQ,CAAC,MAAM;IACbO,OAAO,CAACQ,OAAO,CAACI,QAAQ,CAACC,CAAC,IAAI,KAAK;IACnCb,OAAO,CAACQ,OAAO,CAACI,QAAQ,CAACE,CAAC,IAAI,KAAK;EACrC,CAAC,CAAC;EAEF,oBACEjB,OAAA;IAAQkB,GAAG,EAAEf,OAAQ;IAAAgB,QAAA,gBACnBnB,OAAA;MAAgBkB,GAAG,EAAEd;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCvB,OAAA;MAAgBwB,KAAK,EAAC,SAAS;MAACC,IAAI,EAAE;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEb,CAAC;AAACrB,EAAA,CA5BID,SAAS;EAAA,QAiBbL,QAAQ;AAAA;AAAA8B,EAAA,GAjBJzB,SAAS;AA8Bf,MAAM0B,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,oBACE3B,OAAA,CAACL,MAAM;IAACiC,MAAM,EAAE;MAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAG,CAAE;IAAAX,QAAA,gBAChDnB,OAAA;MAAc+B,SAAS,EAAE;IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCvB,OAAA;MAAY6B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCvB,OAAA,CAACC,SAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbvB,OAAA,CAACH,aAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEb,CAAC;AAACS,GAAA,GATIL,gBAAgB;AAWtB,eAAeA,gBAAgB;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}