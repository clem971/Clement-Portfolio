{"ast":null,"code":"var _jsxFileName = \"/Users/clementr/Desktop/portfolio/portfolio_pro/src/components/NetworkAnimation.js\",\n  _s = $RefreshSig$();\n// src/NetworkAnimation.js\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Particles = () => {\n  _s();\n  const particlesRef = useRef();\n  const particlesGeometry = useMemo(() => {\n    const particleCount = 500;\n    const positions = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 10;\n    }\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    return geometry;\n  }, []);\n\n  // Animer les particules\n  useFrame(() => {\n    if (particlesRef.current) {\n      particlesRef.current.rotation.x += 0.001;\n      particlesRef.current.rotation.y += 0.001;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: particlesRef,\n    geometry: particlesGeometry,\n    children: /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      color: \"#00ff00\",\n      size: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Particles, \"WtuHXRmGCfoloh1iKdjbFXrDzao=\", false, function () {\n  return [useFrame];\n});\n_c = Particles;\nconst NetworkAnimation = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 10],\n      fov: 75\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c2 = NetworkAnimation;\nexport default NetworkAnimation;\nvar _c, _c2;\n$RefreshReg$(_c, \"Particles\");\n$RefreshReg$(_c2, \"NetworkAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","Canvas","useFrame","OrbitControls","THREE","jsxDEV","_jsxDEV","Particles","_s","particlesRef","particlesGeometry","particleCount","positions","Float32Array","i","Math","random","geometry","BufferGeometry","setAttribute","BufferAttribute","current","rotation","x","y","ref","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","NetworkAnimation","camera","position","fov","intensity","_c2","$RefreshReg$"],"sources":["/Users/clementr/Desktop/portfolio/portfolio_pro/src/components/NetworkAnimation.js"],"sourcesContent":["// src/NetworkAnimation.js\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\n\nconst Particles = () => {\n  const particlesRef = useRef();\n\n  const particlesGeometry = useMemo(() => {\n    const particleCount = 500;\n    const positions = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 10;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 10;\n    }\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    return geometry;\n  }, []);\n\n  // Animer les particules\n  useFrame(() => {\n    if (particlesRef.current) {\n      particlesRef.current.rotation.x += 0.001;\n      particlesRef.current.rotation.y += 0.001;\n    }\n  });\n\n  return (\n    <points ref={particlesRef} geometry={particlesGeometry}>\n      <pointsMaterial color=\"#00ff00\" size={0.1} />\n    </points>\n  );\n};\n\nconst NetworkAnimation = () => {\n  return (\n    <Canvas camera={{ position: [0, 0, 10], fov: 75 }}>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      <Particles />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n\nexport default NetworkAnimation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}