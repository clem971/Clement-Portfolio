{"ast":null,"code":"var _jsxFileName = \"/Users/clementr/Desktop/portfolio/portfolio_pro/src/components/NetworkAnimation.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/NetworkAnimation.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkPoints = () => {\n  _s();\n  const pointsRef = useRef();\n  const points = useMemo(() => {\n    const p = new Array(500).fill().map(() => [(Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10]);\n    return p;\n  }, []);\n  useFrame(() => {\n    pointsRef.current.rotation.y += 0.001;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    ref: pointsRef,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      attach: \"geometry\",\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attachObject: ['attributes', 'position'],\n        count: points.length,\n        array: new Float32Array(points.flat()),\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      attach: \"material\",\n      color: \"#00bfff\",\n      size: 0.1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkPoints, \"C9AU6E8IhgsR2edLFU0y102d+GY=\", false, function () {\n  return [useFrame];\n});\n_c = NetworkPoints;\nconst NetworkLines = () => {\n  _s2();\n  const linesRef = useRef();\n  const lines = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < 100; i++) {\n      positions.push((Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10);\n      positions.push((Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10);\n    }\n    return positions;\n  }, []);\n  useFrame(() => {\n    linesRef.current.rotation.y += 0.001;\n  });\n  return /*#__PURE__*/_jsxDEV(\"lineSegments\", {\n    ref: linesRef,\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      attach: \"geometry\",\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attachObject: ['attributes', 'position'],\n        count: lines.length / 3,\n        array: new Float32Array(lines),\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n      attach: \"material\",\n      color: \"#00bfff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s2(NetworkLines, \"iaUMVCqEfcOnAu0u8zBs7/QRyiI=\", false, function () {\n  return [useFrame];\n});\n_c2 = NetworkLines;\nconst NetworkAnimation = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetworkPoints, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetworkLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c3 = NetworkAnimation;\nexport default NetworkAnimation;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NetworkPoints\");\n$RefreshReg$(_c2, \"NetworkLines\");\n$RefreshReg$(_c3, \"NetworkAnimation\");","map":{"version":3,"names":["React","useRef","useMemo","Canvas","useFrame","THREE","jsxDEV","_jsxDEV","NetworkPoints","_s","pointsRef","points","p","Array","fill","map","Math","random","current","rotation","y","ref","children","attach","attachObject","count","length","array","Float32Array","flat","itemSize","fileName","_jsxFileName","lineNumber","columnNumber","color","size","_c","NetworkLines","_s2","linesRef","lines","positions","i","push","_c2","NetworkAnimation","position","_c3","$RefreshReg$"],"sources":["/Users/clementr/Desktop/portfolio/portfolio_pro/src/components/NetworkAnimation.js"],"sourcesContent":["// src/components/NetworkAnimation.js\nimport React, { useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nconst NetworkPoints = () => {\n  const pointsRef = useRef();\n\n  const points = useMemo(() => {\n    const p = new Array(500).fill().map(() => [\n      (Math.random() - 0.5) * 10,\n      (Math.random() - 0.5) * 10,\n      (Math.random() - 0.5) * 10,\n    ]);\n    return p;\n  }, []);\n\n  useFrame(() => {\n    pointsRef.current.rotation.y += 0.001;\n  });\n\n  return (\n    <points ref={pointsRef}>\n      <bufferGeometry attach=\"geometry\">\n        <bufferAttribute\n          attachObject={['attributes', 'position']}\n          count={points.length}\n          array={new Float32Array(points.flat())}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial attach=\"material\" color=\"#00bfff\" size={0.1} />\n    </points>\n  );\n};\n\nconst NetworkLines = () => {\n  const linesRef = useRef();\n\n  const lines = useMemo(() => {\n    const positions = [];\n    for (let i = 0; i < 100; i++) {\n      positions.push(\n        (Math.random() - 0.5) * 10,\n        (Math.random() - 0.5) * 10,\n        (Math.random() - 0.5) * 10\n      );\n      positions.push(\n        (Math.random() - 0.5) * 10,\n        (Math.random() - 0.5) * 10,\n        (Math.random() - 0.5) * 10\n      );\n    }\n    return positions;\n  }, []);\n\n  useFrame(() => {\n    linesRef.current.rotation.y += 0.001;\n  });\n\n  return (\n    <lineSegments ref={linesRef}>\n      <bufferGeometry attach=\"geometry\">\n        <bufferAttribute\n          attachObject={['attributes', 'position']}\n          count={lines.length / 3}\n          array={new Float32Array(lines)}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <lineBasicMaterial attach=\"material\" color=\"#00bfff\" />\n    </lineSegments>\n  );\n};\n\nconst NetworkAnimation = () => {\n  return (\n    <Canvas>\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <NetworkPoints />\n      <NetworkLines />\n    </Canvas>\n  );\n};\n\nexport default NetworkAnimation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}